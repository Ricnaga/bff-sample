input CreateSampleUserInput {
  clientMutationId: ID
  nome: String!
}

type CreateSampleUserPayload {
  clientMutationId: ID
  id: ID!
}

"""This is a Date Scalar"""
scalar Date

type Mutation {
  createSampleUser(input: CreateSampleUserInput!): CreateSampleUserPayload!
  removeSampleUser(input: RemoveSampleUserInput!): RemoveSampleUserPayload!
  updateSampleUser(input: UpdateSampleUserInput!): UpdateSampleUserPayload!
}

type Query {
  getAllSample: [Sample!]!
  getSampleDetails: SampleDetails!
}

input RemoveSampleUserInput {
  clientMutationId: ID
  id: ID!
}

type RemoveSampleUserPayload {
  clientMutationId: ID
  id: ID!
}

type Sample {
  details: SampleDetails!
  id: ID!
  nome: String!
  sobrenome: String!
}

type SampleDetails {
  dataCriacao: String!
  dataModificacao: String!
  id: ID!
}

type SampleUser {
  dataCriacao: String!
  id: ID!
  nome: String!
}

input UpdateSampleUserInput {
  clientMutationId: ID
  id: ID!
  nome: String!
}

type UpdateSampleUserPayload {
  clientMutationId: ID
  id: ID!
}